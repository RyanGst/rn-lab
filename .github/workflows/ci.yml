name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node.js modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore Node.js modules cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ needs.setup.outputs['cache-node-modules-key'] }}

      - name: Run type check
        run: npx tsc --noEmit

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore Node.js modules cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ needs.setup.outputs['cache-node-modules-key'] }}

      - name: Run tests
        run: npx jest --ci --runInBand

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore Node.js modules cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ needs.setup.outputs['cache-node-modules-key'] }}

      - name: Run Biome
        run: npx biome ci ./src

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [setup, type-check, test, lint]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Publish with EAS
        run: npx eas publish
